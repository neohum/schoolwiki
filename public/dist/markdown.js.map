{
  "version": 3,
  "sources": ["../../node_modules/markdown-it-task-lists/index.js", "../../node_modules/markdown-it/lib/common/utils.mjs", "../../node_modules/mdurl/index.mjs", "../../node_modules/mdurl/lib/decode.mjs", "../../node_modules/mdurl/lib/encode.mjs", "../../node_modules/mdurl/lib/format.mjs", "../../node_modules/mdurl/lib/parse.mjs", "../../node_modules/uc.micro/index.mjs", "../../node_modules/uc.micro/properties/Any/regex.mjs", "../../node_modules/uc.micro/categories/Cc/regex.mjs", "../../node_modules/uc.micro/categories/Cf/regex.mjs", "../../node_modules/uc.micro/categories/P/regex.mjs", "../../node_modules/uc.micro/categories/S/regex.mjs", "../../node_modules/uc.micro/categories/Z/regex.mjs", "../../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../node_modules/entities/lib/esm/decode_codepoint.ts", "../../node_modules/entities/lib/esm/decode.ts", "../../node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../../node_modules/entities/lib/esm/escape.ts", "../../node_modules/entities/lib/esm/index.ts", "../../node_modules/markdown-it/lib/helpers/index.mjs", "../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs", "../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs", "../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs", "../../node_modules/markdown-it/lib/renderer.mjs", "../../node_modules/markdown-it/lib/ruler.mjs", "../../node_modules/markdown-it/lib/token.mjs", "../../node_modules/markdown-it/lib/rules_core/state_core.mjs", "../../node_modules/markdown-it/lib/rules_core/normalize.mjs", "../../node_modules/markdown-it/lib/rules_core/block.mjs", "../../node_modules/markdown-it/lib/rules_core/inline.mjs", "../../node_modules/markdown-it/lib/rules_core/linkify.mjs", "../../node_modules/markdown-it/lib/rules_core/replacements.mjs", "../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs", "../../node_modules/markdown-it/lib/rules_core/text_join.mjs", "../../node_modules/markdown-it/lib/parser_core.mjs", "../../node_modules/markdown-it/lib/rules_block/state_block.mjs", "../../node_modules/markdown-it/lib/rules_block/table.mjs", "../../node_modules/markdown-it/lib/rules_block/code.mjs", "../../node_modules/markdown-it/lib/rules_block/fence.mjs", "../../node_modules/markdown-it/lib/rules_block/blockquote.mjs", "../../node_modules/markdown-it/lib/rules_block/hr.mjs", "../../node_modules/markdown-it/lib/rules_block/list.mjs", "../../node_modules/markdown-it/lib/rules_block/reference.mjs", "../../node_modules/markdown-it/lib/common/html_blocks.mjs", "../../node_modules/markdown-it/lib/common/html_re.mjs", "../../node_modules/markdown-it/lib/rules_block/html_block.mjs", "../../node_modules/markdown-it/lib/rules_block/heading.mjs", "../../node_modules/markdown-it/lib/rules_block/lheading.mjs", "../../node_modules/markdown-it/lib/rules_block/paragraph.mjs", "../../node_modules/markdown-it/lib/parser_block.mjs", "../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs", "../../node_modules/markdown-it/lib/rules_inline/text.mjs", "../../node_modules/markdown-it/lib/rules_inline/linkify.mjs", "../../node_modules/markdown-it/lib/rules_inline/newline.mjs", "../../node_modules/markdown-it/lib/rules_inline/escape.mjs", "../../node_modules/markdown-it/lib/rules_inline/backticks.mjs", "../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs", "../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs", "../../node_modules/markdown-it/lib/rules_inline/link.mjs", "../../node_modules/markdown-it/lib/rules_inline/image.mjs", "../../node_modules/markdown-it/lib/rules_inline/autolink.mjs", "../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs", "../../node_modules/markdown-it/lib/rules_inline/entity.mjs", "../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs", "../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs", "../../node_modules/markdown-it/lib/parser_inline.mjs", "../../node_modules/linkify-it/lib/re.mjs", "../../node_modules/linkify-it/index.mjs", "../../node_modules/punycode.js/punycode.es6.js", "../../node_modules/markdown-it/lib/presets/default.mjs", "../../node_modules/markdown-it/lib/presets/zero.mjs", "../../node_modules/markdown-it/lib/presets/commonmark.mjs", "../../node_modules/markdown-it/lib/index.mjs", "../../resources/js/markdown/markdown.js", "../../node_modules/snabbdom/src/htmldomapi.ts", "../../node_modules/snabbdom/src/vnode.ts", "../../node_modules/snabbdom/src/is.ts", "../../node_modules/snabbdom/src/init.ts", "../../node_modules/snabbdom/src/h.ts", "../../node_modules/snabbdom/src/tovnode.ts", "../../node_modules/snabbdom/src/modules/attributes.ts", "../../resources/js/services/vdom.js", "../../resources/js/markdown/display.js", "../../node_modules/idb-keyval/dist/index.js", "../../resources/js/services/drawio.js", "../../resources/js/markdown/actions.js", "../../resources/js/markdown/settings.js", "../../resources/js/markdown/common-events.js", "../../resources/js/markdown/shortcuts.js", "../../resources/js/services/util.js", "../../resources/js/services/clipboard.js", "../../resources/js/markdown/codemirror.js", "../../resources/js/markdown/index.mjs"],
  "sourcesContent": ["// Markdown-it plugin to render GitHub-style task lists; see\n//\n// https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\n// https://github.com/blog/1825-task-lists-in-all-markdown-documents\n\nvar disableCheckboxes = true;\nvar useLabelWrapper = false;\nvar useLabelAfter = false;\n\nmodule.exports = function(md, options) {\n\tif (options) {\n\t\tdisableCheckboxes = !options.enabled;\n\t\tuseLabelWrapper = !!options.label;\n\t\tuseLabelAfter = !!options.labelAfter;\n\t}\n\n\tmd.core.ruler.after('inline', 'github-task-lists', function(state) {\n\t\tvar tokens = state.tokens;\n\t\tfor (var i = 2; i < tokens.length; i++) {\n\t\t\tif (isTodoItem(tokens, i)) {\n\t\t\t\ttodoify(tokens[i], state.Token);\n\t\t\t\tattrSet(tokens[i-2], 'class', 'task-list-item' + (!disableCheckboxes ? ' enabled' : ''));\n\t\t\t\tattrSet(tokens[parentToken(tokens, i-2)], 'class', 'contains-task-list');\n\t\t\t}\n\t\t}\n\t});\n};\n\nfunction attrSet(token, name, value) {\n\tvar index = token.attrIndex(name);\n\tvar attr = [name, value];\n\n\tif (index < 0) {\n\t\ttoken.attrPush(attr);\n\t} else {\n\t\ttoken.attrs[index] = attr;\n\t}\n}\n\nfunction parentToken(tokens, index) {\n\tvar targetLevel = tokens[index].level - 1;\n\tfor (var i = index - 1; i >= 0; i--) {\n\t\tif (tokens[i].level === targetLevel) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction isTodoItem(tokens, index) {\n\treturn isInline(tokens[index]) &&\n\t       isParagraph(tokens[index - 1]) &&\n\t       isListItem(tokens[index - 2]) &&\n\t       startsWithTodoMarkdown(tokens[index]);\n}\n\nfunction todoify(token, TokenConstructor) {\n\ttoken.children.unshift(makeCheckbox(token, TokenConstructor));\n\ttoken.children[1].content = token.children[1].content.slice(3);\n\ttoken.content = token.content.slice(3);\n\n\tif (useLabelWrapper) {\n\t\tif (useLabelAfter) {\n\t\t\ttoken.children.pop();\n\n\t\t\t// Use large random number as id property of the checkbox.\n\t\t\tvar id = 'task-item-' + Math.ceil(Math.random() * (10000 * 1000) - 1000);\n\t\t\ttoken.children[0].content = token.children[0].content.slice(0, -1) + ' id=\"' + id + '\">';\n\t\t\ttoken.children.push(afterLabel(token.content, id, TokenConstructor));\n\t\t} else {\n\t\t\ttoken.children.unshift(beginLabel(TokenConstructor));\n\t\t\ttoken.children.push(endLabel(TokenConstructor));\n\t\t}\n\t}\n}\n\nfunction makeCheckbox(token, TokenConstructor) {\n\tvar checkbox = new TokenConstructor('html_inline', '', 0);\n\tvar disabledAttr = disableCheckboxes ? ' disabled=\"\" ' : '';\n\tif (token.content.indexOf('[ ] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\"' + disabledAttr + 'type=\"checkbox\">';\n\t} else if (token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\" checked=\"\"' + disabledAttr + 'type=\"checkbox\">';\n\t}\n\treturn checkbox;\n}\n\n// these next two functions are kind of hacky; probably should really be a\n// true block-level token with .tag=='label'\nfunction beginLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label>';\n\treturn token;\n}\n\nfunction endLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '</label>';\n\treturn token;\n}\n\nfunction afterLabel(content, id, TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label class=\"task-list-item-label\" for=\"' + id + '\">' + content + '</label>';\n\ttoken.attrs = [{for: id}];\n\treturn token;\n}\n\nfunction isInline(token) { return token.type === 'inline'; }\nfunction isParagraph(token) { return token.type === 'paragraph_open'; }\nfunction isListItem(token) { return token.type === 'list_item_open'; }\n\nfunction startsWithTodoMarkdown(token) {\n\t// leading whitespace in a list item is already trimmed off by markdown-it\n\treturn token.content.indexOf('[ ] ') === 0 || token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0;\n}\n", "// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 '\u1E9E'.toLowerCase() === '\u1E7E', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('\u1E9E'.toLowerCase() === '\u1E7E') {\n    str = str.replace(/\u1E9E/g, '\u00DF')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // \u0130, \u03F4, \u1E9E, \u2126, \u212A, \u212B - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (\u0398), U+03f4 (\u03F4) and lowercase U+03b8 (\u03B8), U+03d1 (\u03D1)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change \u03D1 (it's already lowercase),\n  // and .toUpperCase() doesn't change \u03F4 (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n", "import decode from './lib/decode.mjs'\nimport encode from './lib/encode.mjs'\nimport format from './lib/format.mjs'\nimport parse from './lib/parse.mjs'\n\nexport {\n  decode,\n  encode,\n  format,\n  parse\n}\n", "/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n", "const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n", "export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n", "import Any from './properties/Any/regex.mjs';\nimport Cc  from './categories/Cc/regex.mjs';\nimport Cf  from './categories/Cf/regex.mjs';\nimport P   from './categories/P/regex.mjs';\nimport S   from './categories/S/regex.mjs';\nimport Z   from './categories/Z/regex.mjs';\n\nexport { Any, Cc, Cf, P, S, Z };\n", "export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/", "export default /[\\0-\\x1F\\x7F-\\x9F]/", "export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/", "export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/", "export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/", "export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/", null, null, null, null, null, null, null, "// Just a shortcut for bulk export\n\nimport parseLinkLabel from './parse_link_label.mjs'\nimport parseLinkDestination from './parse_link_destination.mjs'\nimport parseLinkTitle from './parse_link_title.mjs'\n\nexport {\n  parseLinkLabel,\n  parseLinkDestination,\n  parseLinkTitle\n}\n", "// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n", "// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n", "// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n", "/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n", "/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n", "// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n", "// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n", "// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n", "export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n", "export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n", "// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n", "// Simple typographic replacements\n//\n// (c) (C) \u2192 \u00A9\n// (tm) (TM) \u2192 \u2122\n// (r) (R) \u2192 \u00AE\n// +- \u2192 \u00B1\n// ... \u2192 \u2026 (also ?.... \u2192 ?.., !.... \u2192 !..)\n// ???????? \u2192 ???, !!!!! \u2192 !!!, `,,` \u2192 `,`\n// -- \u2192 &ndash;, --- \u2192 &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> \u00BD, \u00BC, \u00BE\n// - multiplications 2 x 4 -> 2 \u00D7 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '\u00A9',\n  r: '\u00AE',\n  tm: '\u2122'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '\u00B1')\n          // .., ..., ....... -> \u2026\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '\u2026').replace(/([?!])\u2026/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n", "// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* \u2019 */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n", "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n", "/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n", "// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n", "// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n", "// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n", "// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n", "// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n", "import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n", "// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n", "// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n", "// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n", "// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n", "// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n", "// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n", "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n", "// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n", "// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n", "// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n", "// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n", "// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n", "// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n", "// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n", "// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n", "// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n", "// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n", "// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n", "/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n", "import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n", "import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n", "// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00AB\u00BB\u201E\u201C' for Russian, '\u201E\u201C\u201A\u2018' for German,\n    // and ['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201C\u201D\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `\u201C\u201D\u2018\u2019`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'\u00AB\u00BB\u201E\u201C'` for Russian, `'\u201E\u201C\u201A\u2018'` for German, and\n *   `['\u00AB\\xA0', '\\xA0\u00BB', '\u2039\\xA0', '\\xA0\u203A']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n", "import MarkdownIt from 'markdown-it';\nimport mdTasksLists from 'markdown-it-task-lists';\n\nexport class Markdown {\n\n    constructor() {\n        this.renderer = new MarkdownIt({html: true});\n        this.renderer.use(mdTasksLists, {label: true});\n    }\n\n    /**\n     * Get the front-end render used to convert markdown to HTML.\n     * @returns {MarkdownIt}\n     */\n    getRenderer() {\n        return this.renderer;\n    }\n\n    /**\n     * Convert the given Markdown to HTML.\n     * @param {String} markdown\n     * @returns {String}\n     */\n    render(markdown) {\n        return this.renderer.render(markdown);\n    }\n\n}\n", null, null, null, null, null, null, null, "import {\n    init,\n    attributesModule,\n    toVNode,\n} from 'snabbdom';\n\nlet patcher;\n\n/**\n * @returns {Function}\n */\nfunction getPatcher() {\n    if (patcher) return patcher;\n\n    patcher = init([\n        attributesModule,\n    ]);\n\n    return patcher;\n}\n\n/**\n * @param {Element} domTarget\n * @param {String} html\n */\nexport function patchDomFromHtmlString(domTarget, html) {\n    const contentDom = document.createElement('div');\n    contentDom.innerHTML = html;\n    getPatcher()(toVNode(domTarget), toVNode(contentDom));\n}\n", "import {patchDomFromHtmlString} from '../services/vdom';\n\nexport class Display {\n\n    /**\n     * @param {MarkdownEditor} editor\n     */\n    constructor(editor) {\n        this.editor = editor;\n        this.container = editor.config.displayEl;\n\n        this.doc = null;\n        this.lastDisplayClick = 0;\n\n        if (this.container.contentDocument.readyState === 'complete') {\n            this.onLoad();\n        } else {\n            this.container.addEventListener('load', this.onLoad.bind(this));\n        }\n\n        this.updateVisibility(editor.settings.get('showPreview'));\n        editor.settings.onChange('showPreview', show => this.updateVisibility(show));\n    }\n\n    updateVisibility(show) {\n        const wrap = this.container.closest('.markdown-editor-wrap');\n        wrap.style.display = show ? null : 'none';\n    }\n\n    onLoad() {\n        this.doc = this.container.contentDocument;\n\n        this.loadStylesIntoDisplay();\n        this.doc.body.className = 'page-content';\n\n        // Prevent markdown display link click redirect\n        this.doc.addEventListener('click', this.onDisplayClick.bind(this));\n    }\n\n    /**\n     * @param {MouseEvent} event\n     */\n    onDisplayClick(event) {\n        const isDblClick = Date.now() - this.lastDisplayClick < 300;\n\n        const link = event.target.closest('a');\n        if (link !== null) {\n            event.preventDefault();\n            window.open(link.getAttribute('href'));\n            return;\n        }\n\n        const drawing = event.target.closest('[drawio-diagram]');\n        if (drawing !== null && isDblClick) {\n            this.editor.actions.editDrawing(drawing);\n            return;\n        }\n\n        this.lastDisplayClick = Date.now();\n    }\n\n    loadStylesIntoDisplay() {\n        this.doc.documentElement.classList.add('markdown-editor-display');\n\n        // Set display to be dark mode if parent is\n        if (document.documentElement.classList.contains('dark-mode')) {\n            this.doc.documentElement.style.backgroundColor = '#222';\n            this.doc.documentElement.classList.add('dark-mode');\n        }\n\n        this.doc.head.innerHTML = '';\n        const styles = document.head.querySelectorAll('style,link[rel=stylesheet]');\n        for (const style of styles) {\n            const copy = style.cloneNode(true);\n            this.doc.head.appendChild(copy);\n        }\n    }\n\n    /**\n     * Patch the display DOM with the given HTML content.\n     * @param {String} html\n     */\n    patchWithHtml(html) {\n        const {body} = this.doc;\n\n        if (body.children.length === 0) {\n            const wrap = document.createElement('div');\n            this.doc.body.append(wrap);\n        }\n\n        const target = body.children[0];\n\n        patchDomFromHtmlString(target, html);\n    }\n\n    /**\n     * Scroll to the given block index within the display content.\n     * Will scroll to the end if the index is -1.\n     * @param {Number} index\n     */\n    scrollToIndex(index) {\n        const elems = this.doc.body?.children[0]?.children;\n        if (elems && elems.length <= index) return;\n\n        const topElem = (index === -1) ? elems[elems.length - 1] : elems[index];\n        topElem.scrollIntoView({block: 'start', inline: 'nearest', behavior: 'smooth'});\n    }\n\n}\n", "function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic \u2013 if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n", "// Docs: https://www.diagrams.net/doc/faq/embed-mode\nimport * as store from './store';\n\nlet iFrame = null;\nlet lastApprovedOrigin;\nlet onInit;\nlet onSave;\nconst saveBackupKey = 'last-drawing-save';\n\nfunction drawPostMessage(data) {\n    iFrame.contentWindow.postMessage(JSON.stringify(data), lastApprovedOrigin);\n}\n\nfunction drawEventExport(message) {\n    store.set(saveBackupKey, message.data);\n    if (onSave) {\n        onSave(message.data).then(() => {\n            store.del(saveBackupKey);\n        });\n    }\n}\n\nfunction drawEventSave(message) {\n    drawPostMessage({\n        action: 'export', format: 'xmlpng', xml: message.xml, spin: 'Updating drawing',\n    });\n}\n\nfunction drawEventInit() {\n    if (!onInit) return;\n    onInit().then(xml => {\n        drawPostMessage({action: 'load', autosave: 1, xml});\n    });\n}\n\nfunction drawEventConfigure() {\n    const config = {};\n    window.$events.emitPublic(iFrame, 'editor-drawio::configure', {config});\n    drawPostMessage({action: 'configure', config});\n}\n\nfunction drawEventClose() {\n    // eslint-disable-next-line no-use-before-define\n    window.removeEventListener('message', drawReceive);\n    if (iFrame) document.body.removeChild(iFrame);\n}\n\n/**\n * Receive and handle a message event from the draw.io window.\n * @param {MessageEvent} event\n */\nfunction drawReceive(event) {\n    if (!event.data || event.data.length < 1) return;\n    if (event.origin !== lastApprovedOrigin) return;\n\n    const message = JSON.parse(event.data);\n    if (message.event === 'init') {\n        drawEventInit();\n    } else if (message.event === 'exit') {\n        drawEventClose();\n    } else if (message.event === 'save') {\n        drawEventSave(message);\n    } else if (message.event === 'export') {\n        drawEventExport(message);\n    } else if (message.event === 'configure') {\n        drawEventConfigure();\n    }\n}\n\n/**\n * Attempt to prompt and restore unsaved drawing content if existing.\n * @returns {Promise<void>}\n */\nasync function attemptRestoreIfExists() {\n    const backupVal = await store.get(saveBackupKey);\n    const dialogEl = document.getElementById('unsaved-drawing-dialog');\n\n    if (!dialogEl) {\n        console.error('Missing expected unsaved-drawing dialog');\n    }\n\n    if (backupVal) {\n        /** @var {ConfirmDialog} */\n        const dialog = window.$components.firstOnElement(dialogEl, 'confirm-dialog');\n        const restore = await dialog.show();\n        if (restore) {\n            onInit = async () => backupVal;\n        }\n    }\n}\n\n/**\n * Show the draw.io editor.\n * onSaveCallback must return a promise that resolves on successful save and errors on failure.\n * onInitCallback must return a promise with the xml to load for the editor.\n * Will attempt to provide an option to restore unsaved changes if found to exist.\n * @param {String} drawioUrl\n * @param {Function<Promise<String>>} onInitCallback\n * @param {Function<Promise>} onSaveCallback - Is called with the drawing data on save.\n */\nexport async function show(drawioUrl, onInitCallback, onSaveCallback) {\n    onInit = onInitCallback;\n    onSave = onSaveCallback;\n\n    await attemptRestoreIfExists();\n\n    iFrame = document.createElement('iframe');\n    iFrame.setAttribute('frameborder', '0');\n    window.addEventListener('message', drawReceive);\n    iFrame.setAttribute('src', drawioUrl);\n    iFrame.setAttribute('class', 'fullscreen');\n    iFrame.style.backgroundColor = '#FFFFFF';\n    document.body.appendChild(iFrame);\n    lastApprovedOrigin = (new URL(drawioUrl)).origin;\n}\n\nexport async function upload(imageData, pageUploadedToId) {\n    const data = {\n        image: imageData,\n        uploaded_to: pageUploadedToId,\n    };\n    const resp = await window.$http.post(window.baseUrl('/images/drawio'), data);\n    return resp.data;\n}\n\nexport function close() {\n    drawEventClose();\n}\n\n/**\n * Load an existing image, by fetching it as Base64 from the system.\n * @param drawingId\n * @returns {Promise<string>}\n */\nexport async function load(drawingId) {\n    try {\n        const resp = await window.$http.get(window.baseUrl(`/images/drawio/base64/${drawingId}`));\n        return `data:image/png;base64,${resp.data.content}`;\n    } catch (error) {\n        if (error instanceof window.$http.HttpError) {\n            window.$events.showResponseError(error);\n        }\n        close();\n        throw error;\n    }\n}\n", "import * as DrawIO from '../services/drawio';\n\nexport class Actions {\n\n    /**\n     * @param {MarkdownEditor} editor\n     */\n    constructor(editor) {\n        this.editor = editor;\n        this.lastContent = {\n            html: '',\n            markdown: '',\n        };\n    }\n\n    updateAndRender() {\n        const content = this.#getText();\n        this.editor.config.inputEl.value = content;\n\n        const html = this.editor.markdown.render(content);\n        window.$events.emit('editor-html-change', '');\n        window.$events.emit('editor-markdown-change', '');\n        this.lastContent.html = html;\n        this.lastContent.markdown = content;\n        this.editor.display.patchWithHtml(html);\n    }\n\n    getContent() {\n        return this.lastContent;\n    }\n\n    showImageInsert() {\n        /** @type {ImageManager} * */\n        const imageManager = window.$components.first('image-manager');\n\n        imageManager.show(image => {\n            const imageUrl = image.thumbs?.display || image.url;\n            const selectedText = this.#getSelectionText();\n            const newText = `[![${selectedText || image.name}](${imageUrl})](${image.url})`;\n            this.#replaceSelection(newText, newText.length);\n        }, 'gallery');\n    }\n\n    insertImage() {\n        const newText = `![${this.#getSelectionText()}](http://)`;\n        this.#replaceSelection(newText, newText.length - 1);\n    }\n\n    insertLink() {\n        const selectedText = this.#getSelectionText();\n        const newText = `[${selectedText}]()`;\n        const cursorPosDiff = (selectedText === '') ? -3 : -1;\n        this.#replaceSelection(newText, newText.length + cursorPosDiff);\n    }\n\n    showImageManager() {\n        const selectionRange = this.#getSelectionRange();\n        /** @type {ImageManager} * */\n        const imageManager = window.$components.first('image-manager');\n        imageManager.show(image => {\n            this.#insertDrawing(image, selectionRange);\n        }, 'drawio');\n    }\n\n    // Show the popup link selector and insert a link when finished\n    showLinkSelector() {\n        const selectionRange = this.#getSelectionRange();\n\n        /** @type {EntitySelectorPopup} * */\n        const selector = window.$components.first('entity-selector-popup');\n        const selectionText = this.#getSelectionText(selectionRange);\n        selector.show(entity => {\n            const selectedText = selectionText || entity.name;\n            const newText = `[${selectedText}](${entity.link})`;\n            this.#replaceSelection(newText, newText.length, selectionRange);\n        }, {\n            initialValue: selectionText,\n            searchEndpoint: '/search/entity-selector',\n            entityTypes: 'page,book,chapter,bookshelf',\n            entityPermission: 'view',\n        });\n    }\n\n    // Show draw.io if enabled and handle save.\n    startDrawing() {\n        const url = this.editor.config.drawioUrl;\n        if (!url) return;\n\n        const selectionRange = this.#getSelectionRange();\n\n        DrawIO.show(url, () => Promise.resolve(''), async pngData => {\n            const data = {\n                image: pngData,\n                uploaded_to: Number(this.editor.config.pageId),\n            };\n\n            try {\n                const resp = await window.$http.post('/images/drawio', data);\n                this.#insertDrawing(resp.data, selectionRange);\n                DrawIO.close();\n            } catch (err) {\n                this.handleDrawingUploadError(err);\n                throw new Error(`Failed to save image with error: ${err}`);\n            }\n        });\n    }\n\n    #insertDrawing(image, originalSelectionRange) {\n        const newText = `<div drawio-diagram=\"${image.id}\"><img src=\"${image.url}\"></div>`;\n        this.#replaceSelection(newText, newText.length, originalSelectionRange);\n    }\n\n    // Show draw.io if enabled and handle save.\n    editDrawing(imgContainer) {\n        const {drawioUrl} = this.editor.config;\n        if (!drawioUrl) {\n            return;\n        }\n\n        const selectionRange = this.#getSelectionRange();\n        const drawingId = imgContainer.getAttribute('drawio-diagram');\n\n        DrawIO.show(drawioUrl, () => DrawIO.load(drawingId), async pngData => {\n            const data = {\n                image: pngData,\n                uploaded_to: Number(this.editor.config.pageId),\n            };\n\n            try {\n                const resp = await window.$http.post('/images/drawio', data);\n                const newText = `<div drawio-diagram=\"${resp.data.id}\"><img src=\"${resp.data.url}\"></div>`;\n                const newContent = this.#getText().split('\\n').map(line => {\n                    if (line.indexOf(`drawio-diagram=\"${drawingId}\"`) !== -1) {\n                        return newText;\n                    }\n                    return line;\n                }).join('\\n');\n                this.#setText(newContent, selectionRange);\n                DrawIO.close();\n            } catch (err) {\n                this.handleDrawingUploadError(err);\n                throw new Error(`Failed to save image with error: ${err}`);\n            }\n        });\n    }\n\n    handleDrawingUploadError(error) {\n        if (error.status === 413) {\n            window.$events.emit('error', this.editor.config.text.serverUploadLimit);\n        } else {\n            window.$events.emit('error', this.editor.config.text.imageUploadError);\n        }\n        console.error(error);\n    }\n\n    // Make the editor full screen\n    fullScreen() {\n        const {container} = this.editor.config;\n        const alreadyFullscreen = container.classList.contains('fullscreen');\n        container.classList.toggle('fullscreen', !alreadyFullscreen);\n        document.body.classList.toggle('markdown-fullscreen', !alreadyFullscreen);\n    }\n\n    // Scroll to a specified text\n    scrollToText(searchText) {\n        if (!searchText) {\n            return;\n        }\n\n        const text = this.editor.cm.state.doc;\n        let lineCount = 1;\n        let scrollToLine = -1;\n        for (const line of text.iterLines()) {\n            if (line.includes(searchText)) {\n                scrollToLine = lineCount;\n                break;\n            }\n            lineCount += 1;\n        }\n\n        if (scrollToLine === -1) {\n            return;\n        }\n\n        const line = text.line(scrollToLine);\n        this.#setSelection(line.from, line.to, true);\n        this.focus();\n    }\n\n    focus() {\n        if (!this.editor.cm.hasFocus) {\n            this.editor.cm.focus();\n        }\n    }\n\n    /**\n     * Insert content into the editor.\n     * @param {String} content\n     */\n    insertContent(content) {\n        this.#replaceSelection(content, content.length);\n    }\n\n    /**\n     * Prepend content to the editor.\n     * @param {String} content\n     */\n    prependContent(content) {\n        content = this.#cleanTextForEditor(content);\n        const selectionRange = this.#getSelectionRange();\n        const selectFrom = selectionRange.from + content.length + 1;\n        this.#dispatchChange(0, 0, `${content}\\n`, selectFrom);\n        this.focus();\n    }\n\n    /**\n     * Append content to the editor.\n     * @param {String} content\n     */\n    appendContent(content) {\n        content = this.#cleanTextForEditor(content);\n        this.#dispatchChange(this.editor.cm.state.doc.length, `\\n${content}`);\n        this.focus();\n    }\n\n    /**\n     * Replace the editor's contents\n     * @param {String} content\n     */\n    replaceContent(content) {\n        this.#setText(content);\n    }\n\n    /**\n     * Replace the start of the line\n     * @param {String} newStart\n     */\n    replaceLineStart(newStart) {\n        const selectionRange = this.#getSelectionRange();\n        const line = this.editor.cm.state.doc.lineAt(selectionRange.from);\n\n        const lineContent = line.text;\n        const lineStart = lineContent.split(' ')[0];\n\n        // Remove symbol if already set\n        if (lineStart === newStart) {\n            const newLineContent = lineContent.replace(`${newStart} `, '');\n            const selectFrom = selectionRange.from + (newLineContent.length - lineContent.length);\n            this.#dispatchChange(line.from, line.to, newLineContent, selectFrom);\n            return;\n        }\n\n        let newLineContent = lineContent;\n        const alreadySymbol = /^[#>`]/.test(lineStart);\n        if (alreadySymbol) {\n            newLineContent = lineContent.replace(lineStart, newStart).trim();\n        } else if (newStart !== '') {\n            newLineContent = `${newStart} ${lineContent}`;\n        }\n\n        const selectFrom = selectionRange.from + (newLineContent.length - lineContent.length);\n        this.#dispatchChange(line.from, line.to, newLineContent, selectFrom);\n    }\n\n    /**\n     * Wrap the selection in the given contents start and end contents.\n     * @param {String} start\n     * @param {String} end\n     */\n    wrapSelection(start, end) {\n        const selectRange = this.#getSelectionRange();\n        const selectionText = this.#getSelectionText(selectRange);\n        if (!selectionText) {\n            this.#wrapLine(start, end);\n            return;\n        }\n\n        let newSelectionText = selectionText;\n        let newRange;\n\n        if (selectionText.startsWith(start) && selectionText.endsWith(end)) {\n            newSelectionText = selectionText.slice(start.length, selectionText.length - end.length);\n            newRange = selectRange.extend(selectRange.from, selectRange.to - (start.length + end.length));\n        } else {\n            newSelectionText = `${start}${selectionText}${end}`;\n            newRange = selectRange.extend(selectRange.from, selectRange.to + (start.length + end.length));\n        }\n\n        this.#dispatchChange(\n            selectRange.from,\n            selectRange.to,\n            newSelectionText,\n            newRange.anchor,\n            newRange.head,\n        );\n    }\n\n    replaceLineStartForOrderedList() {\n        const selectionRange = this.#getSelectionRange();\n        const line = this.editor.cm.state.doc.lineAt(selectionRange.from);\n        const prevLine = this.editor.cm.state.doc.line(line.number - 1);\n\n        const listMatch = prevLine.text.match(/^(\\s*)(\\d)([).])\\s/) || [];\n\n        const number = (Number(listMatch[2]) || 0) + 1;\n        const whiteSpace = listMatch[1] || '';\n        const listMark = listMatch[3] || '.';\n\n        const prefix = `${whiteSpace}${number}${listMark}`;\n        return this.replaceLineStart(prefix);\n    }\n\n    /**\n     * Cycles through the type of callout block within the selection.\n     * Creates a callout block if none existing, and removes it if cycling past the danger type.\n     */\n    cycleCalloutTypeAtSelection() {\n        const selectionRange = this.#getSelectionRange();\n        const line = this.editor.cm.state.doc.lineAt(selectionRange.from);\n\n        const formats = ['info', 'success', 'warning', 'danger'];\n        const joint = formats.join('|');\n        const regex = new RegExp(`class=\"((${joint})\\\\s+callout|callout\\\\s+(${joint}))\"`, 'i');\n        const matches = regex.exec(line.text);\n        const format = (matches ? (matches[2] || matches[3]) : '').toLowerCase();\n\n        if (format === formats[formats.length - 1]) {\n            this.#wrapLine(`<p class=\"callout ${formats[formats.length - 1]}\">`, '</p>');\n        } else if (format === '') {\n            this.#wrapLine('<p class=\"callout info\">', '</p>');\n        } else {\n            const newFormatIndex = formats.indexOf(format) + 1;\n            const newFormat = formats[newFormatIndex];\n            const newContent = line.text.replace(matches[0], matches[0].replace(format, newFormat));\n            const lineDiff = newContent.length - line.text.length;\n            this.#dispatchChange(\n                line.from,\n                line.to,\n                newContent,\n                selectionRange.anchor + lineDiff,\n                selectionRange.head + lineDiff,\n            );\n        }\n    }\n\n    syncDisplayPosition(event) {\n        // Thanks to http://liuhao.im/english/2015/11/10/the-sync-scroll-of-markdown-editor-in-javascript.html\n        const scrollEl = event.target;\n        const atEnd = Math.abs(scrollEl.scrollHeight - scrollEl.clientHeight - scrollEl.scrollTop) < 1;\n        if (atEnd) {\n            this.editor.display.scrollToIndex(-1);\n            return;\n        }\n\n        const blockInfo = this.editor.cm.lineBlockAtHeight(scrollEl.scrollTop);\n        const range = this.editor.cm.state.sliceDoc(0, blockInfo.from);\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(this.editor.markdown.render(range), 'text/html');\n        const totalLines = doc.documentElement.querySelectorAll('body > *');\n        this.editor.display.scrollToIndex(totalLines.length);\n    }\n\n    /**\n     * Fetch and insert the template of the given ID.\n     * The page-relative position provided can be used to determine insert location if possible.\n     * @param {String} templateId\n     * @param {Number} posX\n     * @param {Number} posY\n     */\n    async insertTemplate(templateId, posX, posY) {\n        const cursorPos = this.editor.cm.posAtCoords({x: posX, y: posY}, false);\n        const {data} = await window.$http.get(`/templates/${templateId}`);\n        const content = data.markdown || data.html;\n        this.#dispatchChange(cursorPos, cursorPos, content, cursorPos);\n    }\n\n    /**\n     * Insert multiple images from the clipboard from an event at the provided\n     * screen coordinates (Typically form a paste event).\n     * @param {File[]} images\n     * @param {Number} posX\n     * @param {Number} posY\n     */\n    insertClipboardImages(images, posX, posY) {\n        const cursorPos = this.editor.cm.posAtCoords({x: posX, y: posY}, false);\n        for (const image of images) {\n            this.uploadImage(image, cursorPos);\n        }\n    }\n\n    /**\n     * Handle image upload and add image into markdown content\n     * @param {File} file\n     * @param {?Number} position\n     */\n    async uploadImage(file, position = null) {\n        if (file === null || file.type.indexOf('image') !== 0) return;\n        let ext = 'png';\n\n        if (position === null) {\n            position = this.#getSelectionRange().from;\n        }\n\n        if (file.name) {\n            const fileNameMatches = file.name.match(/\\.(.+)$/);\n            if (fileNameMatches.length > 1) ext = fileNameMatches[1];\n        }\n\n        // Insert image into markdown\n        const id = `image-${Math.random().toString(16).slice(2)}`;\n        const placeholderImage = window.baseUrl(`/loading.gif#upload${id}`);\n        const placeHolderText = `![](${placeholderImage})`;\n        this.#dispatchChange(position, position, placeHolderText, position);\n\n        const remoteFilename = `image-${Date.now()}.${ext}`;\n        const formData = new FormData();\n        formData.append('file', file, remoteFilename);\n        formData.append('uploaded_to', this.editor.config.pageId);\n\n        try {\n            const {data} = await window.$http.post('/images/gallery', formData);\n            const newContent = `[![](${data.thumbs.display})](${data.url})`;\n            this.#findAndReplaceContent(placeHolderText, newContent);\n        } catch (err) {\n            window.$events.error(err?.data?.message || this.editor.config.text.imageUploadError);\n            this.#findAndReplaceContent(placeHolderText, '');\n            console.error(err);\n        }\n    }\n\n    /**\n     * Get the current text of the editor instance.\n     * @return {string}\n     */\n    #getText() {\n        return this.editor.cm.state.doc.toString();\n    }\n\n    /**\n     * Set the text of the current editor instance.\n     * @param {String} text\n     * @param {?SelectionRange} selectionRange\n     */\n    #setText(text, selectionRange = null) {\n        selectionRange = selectionRange || this.#getSelectionRange();\n        const newDoc = this.editor.cm.state.toText(text);\n        const newSelectFrom = Math.min(selectionRange.from, newDoc.length);\n        this.#dispatchChange(0, this.editor.cm.state.doc.length, text, newSelectFrom);\n        this.focus();\n    }\n\n    /**\n     * Replace the current selection and focus the editor.\n     * Takes an offset for the cursor, after the change, relative to the start of the provided string.\n     * Can be provided a selection range to use instead of the current selection range.\n     * @param {String} newContent\n     * @param {Number} cursorOffset\n     * @param {?SelectionRange} selectionRange\n     */\n    #replaceSelection(newContent, cursorOffset = 0, selectionRange = null) {\n        selectionRange = selectionRange || this.editor.cm.state.selection.main;\n        const selectFrom = selectionRange.from + cursorOffset;\n        this.#dispatchChange(selectionRange.from, selectionRange.to, newContent, selectFrom);\n        this.focus();\n    }\n\n    /**\n     * Get the text content of the main current selection.\n     * @param {SelectionRange} selectionRange\n     * @return {string}\n     */\n    #getSelectionText(selectionRange = null) {\n        selectionRange = selectionRange || this.#getSelectionRange();\n        return this.editor.cm.state.sliceDoc(selectionRange.from, selectionRange.to);\n    }\n\n    /**\n     * Get the range of the current main selection.\n     * @return {SelectionRange}\n     */\n    #getSelectionRange() {\n        return this.editor.cm.state.selection.main;\n    }\n\n    /**\n     * Cleans the given text to work with the editor.\n     * Standardises line endings to what's expected.\n     * @param {String} text\n     * @return {String}\n     */\n    #cleanTextForEditor(text) {\n        return text.replace(/\\r\\n|\\r/g, '\\n');\n    }\n\n    /**\n     * Find and replace the first occurrence of [search] with [replace]\n     * @param {String} search\n     * @param {String} replace\n     */\n    #findAndReplaceContent(search, replace) {\n        const newText = this.#getText().replace(search, replace);\n        this.#setText(newText);\n    }\n\n    /**\n     * Wrap the line in the given start and end contents.\n     * @param {String} start\n     * @param {String} end\n     */\n    #wrapLine(start, end) {\n        const selectionRange = this.#getSelectionRange();\n        const line = this.editor.cm.state.doc.lineAt(selectionRange.from);\n        const lineContent = line.text;\n        let newLineContent;\n        let lineOffset = 0;\n\n        if (lineContent.startsWith(start) && lineContent.endsWith(end)) {\n            newLineContent = lineContent.slice(start.length, lineContent.length - end.length);\n            lineOffset = -(start.length);\n        } else {\n            newLineContent = `${start}${lineContent}${end}`;\n            lineOffset = start.length;\n        }\n\n        this.#dispatchChange(line.from, line.to, newLineContent, selectionRange.from + lineOffset);\n    }\n\n    /**\n     * Dispatch changes to the editor.\n     * @param {Number} from\n     * @param {?Number} to\n     * @param {?String} text\n     * @param {?Number} selectFrom\n     * @param {?Number} selectTo\n     */\n    #dispatchChange(from, to = null, text = null, selectFrom = null, selectTo = null) {\n        const tr = {changes: {from, to, insert: text}};\n\n        if (selectFrom) {\n            tr.selection = {anchor: selectFrom};\n            if (selectTo) {\n                tr.selection.head = selectTo;\n            }\n        }\n\n        this.editor.cm.dispatch(tr);\n    }\n\n    /**\n     * Set the current selection range.\n     * Optionally will scroll the new range into view.\n     * @param {Number} from\n     * @param {Number} to\n     * @param {Boolean} scrollIntoView\n     */\n    #setSelection(from, to, scrollIntoView = false) {\n        this.editor.cm.dispatch({\n            selection: {anchor: from, head: to},\n            scrollIntoView,\n        });\n    }\n\n}\n", "export class Settings {\n\n    constructor(settingInputs) {\n        this.settingMap = {\n            scrollSync: true,\n            showPreview: true,\n            editorWidth: 50,\n        };\n        this.changeListeners = {};\n        this.loadFromLocalStorage();\n        this.applyToInputs(settingInputs);\n        this.listenToInputChanges(settingInputs);\n    }\n\n    applyToInputs(inputs) {\n        for (const input of inputs) {\n            const name = input.getAttribute('name').replace('md-', '');\n            input.checked = this.settingMap[name];\n        }\n    }\n\n    listenToInputChanges(inputs) {\n        for (const input of inputs) {\n            input.addEventListener('change', () => {\n                const name = input.getAttribute('name').replace('md-', '');\n                this.set(name, input.checked);\n            });\n        }\n    }\n\n    loadFromLocalStorage() {\n        const lsValString = window.localStorage.getItem('md-editor-settings');\n        if (!lsValString) {\n            return;\n        }\n\n        const lsVals = JSON.parse(lsValString);\n        for (const [key, value] of Object.entries(lsVals)) {\n            if (value !== null && this.settingMap[key] !== undefined) {\n                this.settingMap[key] = value;\n            }\n        }\n    }\n\n    set(key, value) {\n        this.settingMap[key] = value;\n        window.localStorage.setItem('md-editor-settings', JSON.stringify(this.settingMap));\n        for (const listener of (this.changeListeners[key] || [])) {\n            listener(value);\n        }\n    }\n\n    get(key) {\n        return this.settingMap[key] || null;\n    }\n\n    onChange(key, callback) {\n        const listeners = this.changeListeners[key] || [];\n        listeners.push(callback);\n        this.changeListeners[key] = listeners;\n    }\n\n}\n", "function getContentToInsert({html, markdown}) {\n    return markdown || html;\n}\n\n/**\n * @param {MarkdownEditor} editor\n */\nexport function listen(editor) {\n    window.$events.listen('editor::replace', eventContent => {\n        const markdown = getContentToInsert(eventContent);\n        editor.actions.replaceContent(markdown);\n    });\n\n    window.$events.listen('editor::append', eventContent => {\n        const markdown = getContentToInsert(eventContent);\n        editor.actions.appendContent(markdown);\n    });\n\n    window.$events.listen('editor::prepend', eventContent => {\n        const markdown = getContentToInsert(eventContent);\n        editor.actions.prependContent(markdown);\n    });\n\n    window.$events.listen('editor::insert', eventContent => {\n        const markdown = getContentToInsert(eventContent);\n        editor.actions.insertContent(markdown);\n    });\n\n    window.$events.listen('editor::focus', () => {\n        editor.actions.focus();\n    });\n}\n", "/**\n * Provide shortcuts for the editor instance.\n * @param {MarkdownEditor} editor\n * @returns {Object<String, Function>}\n */\nfunction provide(editor) {\n    const shortcuts = {};\n\n    // Insert Image shortcut\n    shortcuts['Shift-Mod-i'] = () => editor.actions.insertImage();\n\n    // Save draft\n    shortcuts['Mod-s'] = () => window.$events.emit('editor-save-draft');\n\n    // Save page\n    shortcuts['Mod-Enter'] = () => window.$events.emit('editor-save-page');\n\n    // Show link selector\n    shortcuts['Shift-Mod-k'] = () => editor.actions.showLinkSelector();\n\n    // Insert Link\n    shortcuts['Mod-k'] = () => editor.actions.insertLink();\n\n    // FormatShortcuts\n    shortcuts['Mod-1'] = () => editor.actions.replaceLineStart('##');\n    shortcuts['Mod-2'] = () => editor.actions.replaceLineStart('###');\n    shortcuts['Mod-3'] = () => editor.actions.replaceLineStart('####');\n    shortcuts['Mod-4'] = () => editor.actions.replaceLineStart('#####');\n    shortcuts['Mod-5'] = () => editor.actions.replaceLineStart('');\n    shortcuts['Mod-d'] = () => editor.actions.replaceLineStart('');\n    shortcuts['Mod-6'] = () => editor.actions.replaceLineStart('>');\n    shortcuts['Mod-q'] = () => editor.actions.replaceLineStart('>');\n    shortcuts['Mod-7'] = () => editor.actions.wrapSelection('\\n```\\n', '\\n```');\n    shortcuts['Mod-8'] = () => editor.actions.wrapSelection('`', '`');\n    shortcuts['Shift-Mod-e'] = () => editor.actions.wrapSelection('`', '`');\n    shortcuts['Mod-9'] = () => editor.actions.cycleCalloutTypeAtSelection();\n    shortcuts['Mod-p'] = () => editor.actions.replaceLineStart('-');\n    shortcuts['Mod-o'] = () => editor.actions.replaceLineStartForOrderedList();\n\n    return shortcuts;\n}\n\n/**\n * Get the editor shortcuts in CodeMirror keybinding format.\n * @param {MarkdownEditor} editor\n * @return {{key: String, run: function, preventDefault: boolean}[]}\n */\nexport function provideKeyBindings(editor) {\n    const shortcuts = provide(editor);\n    const keyBindings = [];\n\n    const wrapAction = action => () => {\n        action();\n        return true;\n    };\n\n    for (const [shortcut, action] of Object.entries(shortcuts)) {\n        keyBindings.push({key: shortcut, run: wrapAction(action), preventDefault: true});\n    }\n\n    return keyBindings;\n}\n", "/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @attribution https://davidwalsh.name/javascript-debounce-function\n * @param {Function} func\n * @param {Number} waitMs\n * @param {Boolean} immediate\n * @returns {Function}\n */\nexport function debounce(func, waitMs, immediate) {\n    let timeout;\n    return function debouncedWrapper(...args) {\n        const context = this;\n        const later = function debouncedTimeout() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, waitMs);\n        if (callNow) func.apply(context, args);\n    };\n}\n\n/**\n * Scroll and highlight an element.\n * @param {HTMLElement} element\n */\nexport function scrollAndHighlightElement(element) {\n    if (!element) return;\n\n    let parent = element;\n    while (parent.parentElement) {\n        parent = parent.parentElement;\n        if (parent.nodeName === 'DETAILS' && !parent.open) {\n            parent.open = true;\n        }\n    }\n\n    element.scrollIntoView({behavior: 'smooth'});\n\n    const highlight = getComputedStyle(document.body).getPropertyValue('--color-link');\n    element.style.outline = `2px dashed ${highlight}`;\n    element.style.outlineOffset = '5px';\n    element.style.transition = null;\n    setTimeout(() => {\n        element.style.transition = 'outline linear 3s';\n        element.style.outline = '2px dashed rgba(0, 0, 0, 0)';\n        const listener = () => {\n            element.removeEventListener('transitionend', listener);\n            element.style.transition = null;\n            element.style.outline = null;\n            element.style.outlineOffset = null;\n        };\n        element.addEventListener('transitionend', listener);\n    }, 1000);\n}\n\n/**\n * Escape any HTML in the given 'unsafe' string.\n * Take from https://stackoverflow.com/a/6234804.\n * @param {String} unsafe\n * @returns {string}\n */\nexport function escapeHtml(unsafe) {\n    return unsafe\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;');\n}\n\n/**\n * Generate a random unique ID.\n *\n * @returns {string}\n */\nexport function uniqueId() {\n    // eslint-disable-next-line no-bitwise\n    const S4 = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    return (`${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`);\n}\n\n/**\n * Create a promise that resolves after the given time.\n * @param {int} timeMs\n * @returns {Promise}\n */\nexport function wait(timeMs) {\n    return new Promise(res => {\n        setTimeout(res, timeMs);\n    });\n}\n", "export class Clipboard {\n\n    /**\n     * Constructor\n     * @param {DataTransfer} clipboardData\n     */\n    constructor(clipboardData) {\n        this.data = clipboardData;\n    }\n\n    /**\n     * Check if the clipboard has any items.\n     */\n    hasItems() {\n        return Boolean(this.data) && Boolean(this.data.types) && this.data.types.length > 0;\n    }\n\n    /**\n     * Check if the given event has tabular-looking data in the clipboard.\n     * @return {boolean}\n     */\n    containsTabularData() {\n        const rtfData = this.data.getData('text/rtf');\n        return rtfData && rtfData.includes('\\\\trowd');\n    }\n\n    /**\n     * Get the images that are in the clipboard data.\n     * @return {Array<File>}\n     */\n    getImages() {\n        const {types} = this.data;\n        const images = [];\n\n        for (const type of types) {\n            if (type.includes('image')) {\n                const item = this.data.getData(type);\n                images.push(item.getAsFile());\n            }\n        }\n\n        const imageFiles = this.getFiles().filter(f => f.type.includes('image'));\n        images.push(...imageFiles);\n\n        return images;\n    }\n\n    /**\n     * Get the files included in the clipboard data.\n     * @return {File[]}\n     */\n    getFiles() {\n        const {files} = this.data;\n        return [...files];\n    }\n\n}\n\nexport async function copyTextToClipboard(text) {\n    if (window.isSecureContext && navigator.clipboard) {\n        await navigator.clipboard.writeText(text);\n        return;\n    }\n\n    // Backup option where we can't use the navigator.clipboard API\n    const tempInput = document.createElement('textarea');\n    tempInput.style = 'position: absolute; left: -1000px; top: -1000px;';\n    tempInput.value = text;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempInput);\n}\n", "import {provideKeyBindings} from './shortcuts';\nimport {debounce} from '../services/util';\nimport {Clipboard} from '../services/clipboard';\n\n/**\n * Initiate the codemirror instance for the markdown editor.\n * @param {MarkdownEditor} editor\n * @returns {Promise<void>}\n */\nexport async function init(editor) {\n    const Code = await window.importVersioned('code');\n\n    /**\n     * @param {ViewUpdate} v\n     */\n    function onViewUpdate(v) {\n        if (v.docChanged) {\n            editor.actions.updateAndRender();\n        }\n    }\n\n    const onScrollDebounced = debounce(editor.actions.syncDisplayPosition.bind(editor.actions), 100, false);\n    let syncActive = editor.settings.get('scrollSync');\n    editor.settings.onChange('scrollSync', val => {\n        syncActive = val;\n    });\n\n    const domEventHandlers = {\n        // Handle scroll to sync display view\n        scroll: event => syncActive && onScrollDebounced(event),\n        // Handle image & content drag n drop\n        drop: event => {\n            const templateId = event.dataTransfer.getData('bookstack/template');\n            if (templateId) {\n                event.preventDefault();\n                editor.actions.insertTemplate(templateId, event.pageX, event.pageY);\n            }\n\n            const clipboard = new Clipboard(event.dataTransfer);\n            const clipboardImages = clipboard.getImages();\n            if (clipboardImages.length > 0) {\n                event.stopPropagation();\n                event.preventDefault();\n                editor.actions.insertClipboardImages(clipboardImages, event.pageX, event.pageY);\n            }\n        },\n        // Handle image paste\n        paste: event => {\n            const clipboard = new Clipboard(event.clipboardData || event.dataTransfer);\n\n            // Don't handle the event ourselves if no items exist of contains table-looking data\n            if (!clipboard.hasItems() || clipboard.containsTabularData()) {\n                return;\n            }\n\n            const images = clipboard.getImages();\n            for (const image of images) {\n                editor.actions.uploadImage(image);\n            }\n        },\n    };\n\n    const cm = Code.markdownEditor(\n        editor.config.inputEl,\n        onViewUpdate,\n        domEventHandlers,\n        provideKeyBindings(editor),\n    );\n\n    // Add editor view to window for easy access/debugging.\n    // Not part of official API/Docs\n    window.mdEditorView = cm;\n\n    return cm;\n}\n", "import {Markdown} from './markdown';\nimport {Display} from './display';\nimport {Actions} from './actions';\nimport {Settings} from './settings';\nimport {listen} from './common-events';\nimport {init as initCodemirror} from './codemirror';\n\n/**\n * Initiate a new markdown editor instance.\n * @param {MarkdownEditorConfig} config\n * @returns {Promise<MarkdownEditor>}\n */\nexport async function init(config) {\n    /**\n     * @type {MarkdownEditor}\n     */\n    const editor = {\n        config,\n        markdown: new Markdown(),\n        settings: new Settings(config.settingInputs),\n    };\n\n    editor.actions = new Actions(editor);\n    editor.display = new Display(editor);\n    editor.cm = await initCodemirror(editor);\n\n    listen(editor);\n\n    return editor;\n}\n\n/**\n * @typedef MarkdownEditorConfig\n * @property {String} pageId\n * @property {Element} container\n * @property {Element} displayEl\n * @property {HTMLTextAreaElement} inputEl\n * @property {String} drawioUrl\n * @property {HTMLInputElement[]} settingInputs\n * @property {Object<String, String>} text\n */\n\n/**\n * @typedef MarkdownEditor\n * @property {MarkdownEditorConfig} config\n * @property {Display} display\n * @property {Markdown} markdown\n * @property {Actions} actions\n * @property {EditorView} cm\n * @property {Settings} settings\n */\n"],
  "mappings": "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AAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,E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AS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OA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AE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EA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",
  "names": ["require_markdown_it_task_lists", "__commonJSMin", "exports", "module", "disableCheckboxes", "useLabelWrapper", "useLabelAfter", "md", "options", "state", "tokens", "i", "isTodoItem", "todoify", "attrSet", "parentToken", "token", "name", "value", "index", "attr", "targetLevel", "isInline", "isParagraph", "isListItem", "startsWithTodoMarkdown", "TokenConstructor", "makeCheckbox", "id", "afterLabel", "beginLabel", "endLabel", "checkbox", "disabledAttr", "content", "utils_exports", "__export", "arrayReplaceAt", "assign", "escapeHtml", "escapeRE", "fromCodePoint", "has", "isMdAsciiPunct", "isPunctChar", "isSpace", "isString", "isValidEntityCode", "isWhiteSpace", "lib", "normalizeReference", "unescapeAll", "unescapeMd", "mdurl_exports", "__export", "decode_default", "encode_default", "format", "parse_default", "decodeCache", "getDecodeCache", "exclude", "cache", "i", "ch", "decode", "string", "seq", "result", "l", "b1", "b2", "chr", "b3", "b4", "decode_default", "encodeCache", "getEncodeCache", "exclude", "cache", "i", "ch", "encode", "string", "keepEscaped", "result", "l", "code", "nextCode", "encode_default", "format", "url", "result", "Url", "protocolPattern", "portPattern", "simplePathPattern", "delims", "unwise", "autoEscape", "nonHostChars", "hostEndingChars", "hostnameMaxLen", "hostnamePartPattern", "hostnamePartStart", "hostlessProtocol", "slashedProtocol", "urlParse", "url", "slashesDenoteHost", "u", "lowerProto", "hec", "slashes", "rest", "simplePath", "proto", "hostEnd", "i", "auth", "atSign", "host", "ipv6Hostname", "hostparts", "l", "part", "newpart", "j", "k", "validParts", "notHost", "bit", "hash", "qm", "port", "parse_default", "uc_exports", "__export", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "decode_data_html_default", "c", "decode_data_xml_default", "c", "decodeMap", "fromCodePoint", "_a", "codePoint", "output", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "code", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "decodeTree", "emitCodePoint", "errors", "decodeMode", "str", "offset", "start", "end", "base", "digitCount", "startIdx", "char", "lastCp", "expectedLength", "_a", "replaceCodePoint", "current", "valueLength", "determineBranch", "result", "consumed", "getDecoder", "ret", "decoder", "fromCodePoint", "lastIndex", "len", "nodeIdx", "branchCount", "jumpOffset", "value", "lo", "hi", "mid", "midVal", "htmlDecoder", "decode_data_html_default", "xmlDecoder", "decode_data_xml_default", "decodeHTML", "mode", "restoreDiff", "arr", "i", "encode_html_default", "xmlCodeMap", "getCodePoint", "str", "index", "c", "getEscaper", "regex", "map", "data", "match", "lastIdx", "result", "escapeUTF8", "xmlCodeMap", "escapeAttribute", "escapeText", "EntityLevel", "EncodingMode", "_class", "obj", "isString", "_hasOwnProperty", "has", "object", "key", "assign", "source", "arrayReplaceAt", "src", "pos", "newElements", "isValidEntityCode", "c", "fromCodePoint", "surrogate1", "surrogate2", "UNESCAPE_MD_RE", "ENTITY_RE", "UNESCAPE_ALL_RE", "DIGITAL_ENTITY_TEST_RE", "replaceEntityPattern", "match", "name", "code", "decoded", "decodeHTML", "unescapeMd", "str", "unescapeAll", "escaped", "entity", "HTML_ESCAPE_TEST_RE", "HTML_ESCAPE_REPLACE_RE", "HTML_REPLACEMENTS", "replaceUnsafeChar", "ch", "escapeHtml", "REGEXP_ESCAPE_RE", "escapeRE", "isSpace", "isWhiteSpace", "isPunctChar", "regex_default", "isMdAsciiPunct", "normalizeReference", "lib", "mdurl_exports", "uc_exports", "helpers_exports", "__export", "parseLinkDestination", "parseLinkLabel", "parseLinkTitle", "parseLinkLabel", "state", "start", "disableNested", "level", "found", "marker", "prevPos", "max", "oldPos", "labelEnd", "parseLinkDestination", "str", "start", "max", "code", "pos", "result", "unescapeAll", "level", "parseLinkTitle", "str", "start", "max", "prev_state", "code", "pos", "state", "marker", "unescapeAll", "default_rules", "tokens", "idx", "options", "env", "slf", "token", "escapeHtml", "info", "unescapeAll", "langName", "langAttrs", "arr", "highlighted", "i", "tmpAttrs", "tmpToken", "Renderer", "assign", "l", "result", "needLf", "nextToken", "rules", "len", "type", "renderer_default", "Ruler", "name", "i", "self", "chains", "rule", "altName", "chain", "fn", "options", "index", "opt", "beforeName", "ruleName", "afterName", "list", "ignoreInvalid", "result", "idx", "chainName", "ruler_default", "Token", "type", "tag", "nesting", "name", "attrs", "i", "len", "attrData", "value", "idx", "token_default", "StateCore", "src", "md", "env", "token_default", "state_core_default", "NEWLINES_RE", "NULL_RE", "normalize", "state", "str", "block", "state", "token", "inline", "state", "tokens", "i", "l", "tok", "isLinkOpen", "str", "isLinkClose", "linkify", "state", "blockTokens", "j", "l", "tokens", "htmlLinkLevel", "currentToken", "text", "links", "nodes", "level", "lastPos", "ln", "url", "fullUrl", "urlText", "pos", "token", "token_o", "token_t", "token_c", "arrayReplaceAt", "RARE_RE", "SCOPED_ABBR_TEST_RE", "SCOPED_ABBR_RE", "SCOPED_ABBR", "replaceFn", "match", "name", "replace_scoped", "inlineTokens", "inside_autolink", "i", "token", "replace_rare", "replace", "state", "blkIdx", "QUOTE_TEST_RE", "QUOTE_RE", "APOSTROPHE", "replaceAt", "str", "index", "ch", "process_inlines", "tokens", "state", "j", "stack", "i", "token", "thisLevel", "text", "pos", "max", "OUTER", "t", "canOpen", "canClose", "isSingle", "lastChar", "nextChar", "isLastPunctChar", "isMdAsciiPunct", "isPunctChar", "isNextPunctChar", "isLastWhiteSpace", "isWhiteSpace", "isNextWhiteSpace", "item", "openQuote", "closeQuote", "smartquotes", "blkIdx", "text_join", "state", "curr", "last", "blockTokens", "l", "j", "tokens", "max", "_rules", "normalize", "block", "inline", "linkify", "replace", "smartquotes", "text_join", "Core", "ruler_default", "i", "state", "rules", "l", "state_core_default", "parser_core_default", "StateBlock", "src", "md", "env", "tokens", "s", "start", "pos", "indent", "offset", "len", "indent_found", "ch", "isSpace", "type", "tag", "nesting", "token", "token_default", "line", "from", "max", "min", "code", "begin", "end", "keepLastLF", "queue", "lineIndent", "lineStart", "first", "last", "state_block_default", "MAX_AUTOCOMPLETED_CELLS", "getLine", "state", "line", "pos", "max", "escapedSplit", "str", "result", "ch", "isEscaped", "lastPos", "current", "table", "startLine", "endLine", "silent", "nextLine", "firstCh", "secondCh", "isSpace", "lineText", "columns", "aligns", "i", "t", "columnCount", "oldParentType", "terminatorRules", "token_to", "tableLines", "token_tho", "token_htro", "token_ho", "token_il", "tbodyLines", "autocompletedCells", "terminate", "l", "token_tbo", "token_tro", "token_tdo", "code", "state", "startLine", "endLine", "nextLine", "last", "token", "fence", "state", "startLine", "endLine", "silent", "pos", "max", "marker", "mem", "len", "markup", "params", "nextLine", "haveEndMarker", "token", "blockquote", "state", "startLine", "endLine", "silent", "pos", "max", "oldLineMax", "oldBMarks", "oldBSCount", "oldSCount", "oldTShift", "terminatorRules", "oldParentType", "lastLineEmpty", "nextLine", "isOutdented", "initial", "spaceAfterMarker", "adjustTab", "offset", "ch", "isSpace", "terminate", "i", "l", "oldIndent", "token_o", "lines", "token_c", "hr", "state", "startLine", "endLine", "silent", "max", "pos", "marker", "cnt", "ch", "isSpace", "token", "skipBulletListMarker", "state", "startLine", "max", "pos", "marker", "ch", "isSpace", "skipOrderedListMarker", "start", "markTightParagraphs", "idx", "level", "i", "l", "list", "endLine", "silent", "token", "nextLine", "tight", "isTerminatingParagraph", "isOrdered", "markerValue", "posAfterMarker", "markerCharCode", "listTokIdx", "listLines", "prevEmptyEnd", "terminatorRules", "oldParentType", "initial", "offset", "contentStart", "indentAfterMarker", "indent", "itemLines", "oldTight", "oldTShift", "oldSCount", "oldListIndent", "terminate", "reference", "state", "startLine", "_endLine", "silent", "pos", "max", "nextLine", "getNextLine", "endLine", "isContinuation", "terminatorRules", "oldParentType", "terminate", "i", "l", "str", "labelEnd", "ch", "lineContent", "isSpace", "destRes", "href", "destEndPos", "destEndLineNo", "start", "titleRes", "title", "label", "normalizeReference", "html_blocks_default", "attr_name", "unquoted", "single_quoted", "double_quoted", "attr_value", "attribute", "open_tag", "close_tag", "comment", "processing", "declaration", "cdata", "HTML_TAG_RE", "HTML_OPEN_CLOSE_TAG_RE", "HTML_SEQUENCES", "html_blocks_default", "HTML_OPEN_CLOSE_TAG_RE", "html_block", "state", "startLine", "endLine", "silent", "pos", "max", "lineText", "i", "nextLine", "token", "heading", "state", "startLine", "endLine", "silent", "pos", "max", "ch", "level", "isSpace", "tmp", "token_o", "token_i", "token_c", "lheading", "state", "startLine", "endLine", "terminatorRules", "oldParentType", "level", "marker", "nextLine", "pos", "max", "terminate", "i", "content", "token_o", "token_i", "token_c", "paragraph", "state", "startLine", "endLine", "terminatorRules", "oldParentType", "nextLine", "terminate", "i", "l", "content", "token_o", "token_i", "_rules", "table", "code", "fence", "blockquote", "hr", "list", "reference", "html_block", "heading", "lheading", "paragraph", "ParserBlock", "ruler_default", "i", "state", "startLine", "endLine", "rules", "len", "maxNesting", "line", "hasEmptyLines", "prevLine", "ok", "src", "md", "env", "outTokens", "state_block_default", "parser_block_default", "StateInline", "src", "md", "env", "outTokens", "token", "token_default", "type", "tag", "nesting", "token_meta", "start", "canSplitWord", "max", "marker", "lastChar", "pos", "count", "nextChar", "isLastPunctChar", "isMdAsciiPunct", "isPunctChar", "isNextPunctChar", "isLastWhiteSpace", "isWhiteSpace", "isNextWhiteSpace", "left_flanking", "right_flanking", "state_inline_default", "isTerminatorChar", "ch", "text", "state", "silent", "pos", "SCHEME_RE", "linkify", "state", "silent", "pos", "max", "match", "proto", "link", "url", "fullUrl", "token_o", "token_t", "token_c", "newline", "state", "silent", "pos", "pmax", "max", "ws", "isSpace", "ESCAPED", "i", "ch", "escape", "state", "silent", "pos", "max", "ch1", "isSpace", "escapedStr", "ch2", "origStr", "token", "backtick", "state", "silent", "pos", "start", "max", "marker", "openerLength", "matchEnd", "matchStart", "closerLength", "token", "strikethrough_tokenize", "state", "silent", "start", "marker", "scanned", "len", "ch", "token", "i", "postProcess", "delimiters", "loneMarkers", "max", "startDelim", "endDelim", "j", "strikethrough_postProcess", "tokens_meta", "curr", "strikethrough_default", "emphasis_tokenize", "state", "silent", "start", "marker", "scanned", "i", "token", "postProcess", "delimiters", "max", "startDelim", "endDelim", "isStrong", "ch", "token_o", "token_c", "emphasis_post_process", "tokens_meta", "curr", "emphasis_default", "link", "state", "silent", "code", "label", "res", "ref", "href", "title", "start", "parseReference", "oldPos", "max", "labelStart", "labelEnd", "pos", "isSpace", "normalizeReference", "token_o", "attrs", "image", "state", "silent", "code", "content", "label", "pos", "ref", "res", "title", "start", "href", "oldPos", "max", "labelStart", "labelEnd", "isSpace", "normalizeReference", "tokens", "token", "attrs", "EMAIL_RE", "AUTOLINK_RE", "autolink", "state", "silent", "pos", "start", "max", "ch", "url", "fullUrl", "token_o", "token_t", "token_c", "isLinkOpen", "str", "isLinkClose", "isLetter", "ch", "lc", "html_inline", "state", "silent", "max", "pos", "match", "HTML_TAG_RE", "token", "DIGITAL_RE", "NAMED_RE", "entity", "state", "silent", "pos", "max", "match", "code", "token", "isValidEntityCode", "fromCodePoint", "decoded", "decodeHTML", "processDelimiters", "delimiters", "openersBottom", "max", "headerIdx", "lastTokenIdx", "jumps", "closerIdx", "closer", "minOpenerIdx", "openerIdx", "newMinOpenerIdx", "opener", "isOddMatch", "lastJump", "link_pairs", "state", "tokens_meta", "curr", "fragments_join", "state", "curr", "last", "level", "tokens", "max", "_rules", "text", "linkify", "newline", "escape", "backtick", "strikethrough_default", "emphasis_default", "link", "image", "autolink", "html_inline", "entity", "_rules2", "link_pairs", "fragments_join", "ParserInline", "ruler_default", "i", "state", "pos", "rules", "len", "maxNesting", "cache", "ok", "end", "prevPos", "str", "md", "env", "outTokens", "state_inline_default", "parser_inline_default", "re_default", "opts", "re", "regex_default", "text_separators", "assign", "obj", "source", "key", "_class", "isString", "isObject", "isRegExp", "isFunction", "escapeRE", "str", "defaultOptions", "isOptionsObj", "acc", "k", "defaultSchemas", "text", "pos", "self", "tail", "tlds_2ch_src_re", "tlds_default", "resetScanCache", "createValidator", "re", "createNormalizer", "match", "compile", "re_default", "tlds", "untpl", "tpl", "aliases", "schemaError", "name", "val", "compiled", "alias", "slist", "Match", "shift", "start", "end", "createMatch", "LinkifyIt", "schemas", "options", "schema", "definition", "m", "ml", "me", "len", "next", "tld_pos", "at_pos", "result", "list", "keepOld", "el", "idx", "arr", "linkify_it_default", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "stringFromCharCode", "error", "type", "map", "array", "callback", "result", "length", "mapDomain", "domain", "parts", "labels", "encoded", "ucs2decode", "string", "output", "counter", "value", "extra", "ucs2encode", "codePoints", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "bias", "basic", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "encode", "n", "currentValue", "basicLength", "handledCPCount", "m", "handledCPCountPlusOne", "q", "qMinusT", "toUnicode", "toASCII", "punycode", "punycode_es6_default", "punycode", "default_default", "zero_default", "commonmark_default", "config", "default_default", "zero_default", "commonmark_default", "BAD_PROTO_RE", "GOOD_DATA_RE", "validateLink", "url", "str", "RECODE_HOSTNAME_FOR", "normalizeLink", "parsed", "parse_default", "punycode_es6_default", "encode_default", "format", "normalizeLinkText", "decode_default", "MarkdownIt", "presetName", "options", "isString", "parser_inline_default", "parser_block_default", "parser_core_default", "renderer_default", "linkify_it_default", "utils_exports", "assign", "helpers_exports", "presets", "self", "name", "list", "ignoreInvalid", "result", "chain", "missed", "plugin", "args", "src", "env", "state", "lib_default", "import_markdown_it_task_lists", "Markdown", "lib_default", "mdTasksLists", "markdown", "createElement", "tagName", "options", "createElementNS", "namespaceURI", "qualifiedName", "createDocumentFragment", "parseFragment", "createTextNode", "text", "createComment", "insertBefore", "parentNode", "newNode", "referenceNode", "isDocumentFragment", "node", "removeChild", "child", "appendChild", "nextSibling", "fragment", "parent", "children", "index", "_a", "elm", "setTextContent", "getTextContent", "isElement", "isText", "isComment", "fragmentNode", "_b", "_c", "htmlDomApi", "vnode", "sel", "data", "children", "text", "elm", "key", "array", "primitive", "s", "isUndef", "s", "isDef", "emptyNode", "vnode", "sameVnode", "vnode1", "vnode2", "isSameKey", "isSameIs", "_a", "_b", "isSameSel", "isSameTextOrFragment", "documentFragmentIsNotSupported", "isElement", "api", "isDocumentFragment", "createKeyToOldIdx", "children", "beginIdx", "endIdx", "map", "i", "key", "hooks", "init", "modules", "domApi", "options", "cbs", "htmlDomApi", "hook", "module", "currentHook", "emptyNodeAt", "elm", "id", "classes", "c", "emptyDocumentFragmentAt", "frag", "createRmCb", "childElm", "listeners", "parent", "createElm", "insertedVnodeQueue", "data", "sel", "hashIdx", "dotIdx", "hash", "dot", "tag", "primitive", "array", "ch", "_c", "_d", "addVnodes", "parentElm", "before", "vnodes", "startIdx", "invokeDestroyHook", "j", "child", "removeVnodes", "rm", "removeHook", "updateChildren", "oldCh", "newCh", "oldStartIdx", "newStartIdx", "oldEndIdx", "oldStartVnode", "oldEndVnode", "newEndIdx", "newStartVnode", "newEndVnode", "oldKeyToIdx", "idxInOld", "elmToMove", "patchVnode", "oldVnode", "_g", "_f", "_e", "_h", "addNS", "data", "children", "sel", "i", "child", "childData", "toVNode", "node", "domApi", "api", "htmlDomApi", "text", "id", "cn", "c", "sel", "attrs", "dataset", "data", "children", "name", "i", "n", "elmAttrs", "elmChildren", "addNS", "vnode", "xlinkNS", "xmlnsNS", "xmlNS", "updateAttrs", "oldVnode", "vnode", "key", "elm", "oldAttrs", "attrs", "cur", "xmlNS", "xmlnsNS", "xlinkNS", "attributesModule", "patcher", "getPatcher", "init", "attributesModule", "patchDomFromHtmlString", "domTarget", "html", "contentDom", "toVNode", "Display", "editor", "show", "wrap", "event", "isDblClick", "link", "drawing", "styles", "style", "copy", "html", "body", "target", "patchDomFromHtmlString", "index", "elems", "promisifyRequest", "request", "resolve", "reject", "createStore", "dbName", "storeName", "dbp", "txMode", "callback", "db", "defaultGetStoreFunc", "defaultGetStore", "get", "key", "customStore", "store", "set", "value", "del", "key", "customStore", "defaultGetStore", "store", "promisifyRequest", "iFrame", "lastApprovedOrigin", "onInit", "onSave", "saveBackupKey", "drawPostMessage", "data", "drawEventExport", "message", "set", "del", "drawEventSave", "drawEventInit", "xml", "drawEventConfigure", "config", "drawEventClose", "drawReceive", "event", "attemptRestoreIfExists", "backupVal", "get", "dialogEl", "show", "drawioUrl", "onInitCallback", "onSaveCallback", "close", "drawEventClose", "load", "drawingId", "error", "_insertDrawing", "insertDrawing_fn", "_getText", "getText_fn", "_setText", "setText_fn", "_replaceSelection", "replaceSelection_fn", "_getSelectionText", "getSelectionText_fn", "_getSelectionRange", "getSelectionRange_fn", "_cleanTextForEditor", "cleanTextForEditor_fn", "_findAndReplaceContent", "findAndReplaceContent_fn", "_wrapLine", "wrapLine_fn", "_dispatchChange", "dispatchChange_fn", "_setSelection", "setSelection_fn", "Actions", "editor", "__privateAdd", "content", "__privateMethod", "html", "image", "imageUrl", "newText", "selectedText", "cursorPosDiff", "selectionRange", "selector", "selectionText", "entity", "url", "show", "pngData", "data", "resp", "close", "err", "imgContainer", "drawioUrl", "drawingId", "load", "newContent", "line", "error", "container", "alreadyFullscreen", "searchText", "text", "lineCount", "scrollToLine", "selectFrom", "newStart", "lineContent", "lineStart", "newLineContent", "start", "end", "selectRange", "newSelectionText", "newRange", "listMatch", "number", "whiteSpace", "listMark", "prefix", "formats", "joint", "matches", "format", "newFormatIndex", "newFormat", "lineDiff", "event", "scrollEl", "blockInfo", "range", "totalLines", "templateId", "posX", "posY", "cursorPos", "images", "file", "position", "ext", "fileNameMatches", "id", "placeHolderText", "remoteFilename", "formData", "originalSelectionRange", "newDoc", "newSelectFrom", "cursorOffset", "search", "replace", "lineOffset", "from", "to", "selectTo", "tr", "scrollIntoView", "Settings", "settingInputs", "inputs", "input", "name", "lsValString", "lsVals", "key", "value", "listener", "callback", "listeners", "getContentToInsert", "html", "markdown", "listen", "editor", "eventContent", "provide", "editor", "shortcuts", "provideKeyBindings", "keyBindings", "wrapAction", "action", "shortcut", "debounce", "func", "waitMs", "immediate", "timeout", "args", "context", "later", "callNow", "Clipboard", "clipboardData", "rtfData", "types", "images", "type", "item", "imageFiles", "f", "files", "init", "editor", "Code", "onViewUpdate", "v", "onScrollDebounced", "debounce", "syncActive", "val", "domEventHandlers", "event", "templateId", "clipboardImages", "Clipboard", "clipboard", "images", "image", "cm", "provideKeyBindings", "init", "config", "editor", "Markdown", "Settings", "Actions", "Display", "listen"]
}
